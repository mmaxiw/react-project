{"version":3,"sources":["components/layout/Header.js","components/pages/About.js","components/pages/NotFound.js","components/test/Test.js","context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","branding","react_default","a","createElement","className","href","react_router_dom","to","defaultProps","About","NotFound","Test","state","title","body","_this2","this","fetch","then","response","json","data","setState","console","log","_this$state","Component","Context","React","createContext","reducer","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","stop","children","Consumer","Contact","showContactInfo","onDeleteClick","delete","_this$props","name","email","phone","onClick","style","cursor","float","color","bind","marginRight","Contacts","Fragment","contacts_Contact","assign","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","prototypes","PropTypes","string","isRequired","func","AddContact","errors","e","defineProperty","target","onSubmit","newContact","preventDefault","abrupt","post","history","push","_this$state2","layout_TextInputGroup","EditContact","updContact","match","params","put","App","context_Provider","basename","process","layout_Header","react_router","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6c460a4e.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nconst Header = (props) => {\n    const { branding } = props;\n\n    return (\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\n            <div className=\"container\">\n                <a href=\"/\" className=\"navbar-brand\">{branding}</a>\n                <div>\n                    <ul className=\"navbar-nav mr-auto\">\n                        <li className=\"nav-item\">\n                            <Link to=\"/\" className=\"nav-link\">\n                                <i className=\"fas fa-home\"> Home</i>\n                            </Link>\n                        </li>\n                        <li className=\"nav-item\">\n                            <Link to=\"/contact/add\" className=\"nav-link\">\n                                <i className=\"fas fa-plus\"> Add Contact</i>\n                            </Link>\n                        </li>\n                        <li className=\"nav-item\">\n                            <Link to=\"/about\" className=\"nav-link\">\n                                <i className=\"fas fa-question\"> About</i>\n                            </Link>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n        </nav>\n    )\n}\n\nHeader.defaultProps = {\n    branding: 'My App'\n}\n\nHeader.propTypes = {\n    branding: PropTypes.string.isRequired,\n}\n\nexport default Header;\n","import React from 'react'\n\nexport default () => {\n    return (\n        <div>\n            <h1 className=\"display-4\">About Contact Manager</h1>\n            <p className=\"lead\">Simple app to manage contacts.</p>\n            <p className=\"text-secondary\">Version 1.0.0</p>\n        </div>\n    )\n}\n","import React from 'react'\n\nexport default () => {\n    return (\n        <div>\n            <h1 className=\"display-4\">404 Page Not Found</h1>\n            <p className=\"lead\">Sorry, that page does not exist</p>\n        </div>\n    )\n}\n","import React, { Component } from 'react'\n\nclass Test extends Component {\n\n    state = {\n        title: '',\n        body: ''\n    }\n\n    componentDidMount() {\n        fetch('https://jsonplaceholder.typicode.com/todos/1')\n            .then(response => response.json())\n            .then(data => this.setState({ title: data.title, body: data.body }))\n        console.log('componentDidMount...');\n    }\n\n    // componentDidUpdate() {\n    //     console.log('componentDidUpdate...');\n    // }\n\n    // componentWillUpdate() {\n    //     console.log('componentWillUpdate...');\n    // }\n\n    // componentWillReceiveProps(nextProps, nextState) {\n    //     console.log('componentWillReceiveProps...');\n    // }\n\n    // static getDerivedStateFromProps(nextProps, prevState){\n    //     return {\n    //         test: 'somethingå'\n    //     };\n    // }\n\n    // getSnapshotBeforeUpdate(prevProps, prevState) {\n    //     console.log('getSnapshotBeforeUpdate...');\n    // }\n\n    render() {\n\n        const { title, body } = this.state;\n        return (\n            <div>\n                <h1>{title}</h1>\n                <p>{body}</p>\n            </div>\n        )\n    }\n}\n\nexport default Test;\n","import React, { Component } from 'react'\nimport axios from 'axios';\n\nconst Context = React.createContext();\n\nconst reducer = (state, action) => {\n    switch (action.type) {\n        case 'DELETE_CONTACT':\n            return {\n                ...state,\n                contacts: state.contacts.filter(contact => contact.id !== action.payload)\n            };\n        case 'ADD_CONTACT':\n            return {\n                ...state,\n                contacts: [action.payload, ...state.contacts]\n            };\n\n        case 'UPDATE_CONTACT':\n            return {\n                ...state,\n                contacts: state.contact.map(contact => contact.id === action.payload.id ? (contact = action.payload) : contact)\n            };\n\n\n        default: return state\n    }\n}\n\nexport class Provider extends Component {\n    state = {\n        contacts: [],\n        dispatch: action => this.setState(state => reducer(state, action))\n    }\n\n    async componentDidMount() {\n        const res = await axios.get('https://jsonplaceholder.typicode.com/users');\n\n        this.setState({ contacts: res.data })\n    }\n\n    render() {\n        return (\n            <Context.Provider value={this.state}>\n                {this.props.children}\n            </Context.Provider>\n        )\n    }\n}\n\nexport const Consumer = Context.Consumer;\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\n\nimport { Consumer } from '../../context';\n\nclass Contact extends Component {\n\n    state = {\n        showContactInfo: false\n    };\n\n    onDeleteClick = async (id, dispatch) => {\n        await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`)\n        dispatch({ type: 'DELETE_CONTACT', payload: id });\n    }\n\n    render() {\n\n        const { id, name, email, phone } = this.props;\n        const { showContactInfo } = this.state;\n        return (\n            <Consumer>\n                {value => {\n                    const { dispatch } = value;\n                    return (\n                        <div className=\"card card-body mb-3\">\n                            <h4>\n                                {name}{' '}\n                                <i className=\"fas fa-sort-down\"\n                                    onClick={() => this.setState({ showContactInfo: !this.state.showContactInfo })}\n                                    style={{ cursor: 'pointer' }}\n                                />\n                                <i className='fas fa-times'\n                                    style={{ cursor: 'pointer', float: 'right', color: 'red' }}\n                                    onClick={this.onDeleteClick.bind(this, id, dispatch)}\n                                />\n                                <Link to={`contact/edit/${id}`}>\n                                    <i className=\"fas fa-pencil-alt\" style={{cursor: 'pointer', float: 'right', color: 'black', marginRight: '1rem'}}/>\n                                    </Link>\n                            </h4>\n                            {\n                                (showContactInfo) ? (\n                                    <ul className=\"list-group\">\n                                        <li className=\"list-group-item\">Email: {email}</li>\n                                        <li className=\"list-group-item\">Phone: {phone}</li>\n                                    </ul>\n                                )\n                                    : null\n                            }\n                        </div>\n                    );\n                }}\n            </Consumer>\n        )\n    }\n}\n\nContact.defaultProps = {\n    name: 'Israel Israeli',\n    email: 'xxx@xxx.com',\n    phone: '000-0000-000',\n}\n\nContact.propTypes = {\n    name: PropTypes.string,\n    email: PropTypes.string,\n    phone: PropTypes.string,\n}\n\n\nexport default Contact;","import React, { Component } from 'react'\n\n// Components\nimport Contact from './Contact';\nimport { Consumer } from '../../context';\n\nclass Contacts extends Component {\n\n    render() {\n        return (\n            <Consumer>\n                {value => {\n                    const { contacts } = value;\n                    return (\n                        <React.Fragment>\n                            <h1 className=\"display-4 mb-2\">\n                                <span className=\"text-danger\">Contact List</span>\n                            </h1>\n                            {contacts.map(contact => (\n                                <Contact {...contact} key={contact.id} />\n                            ))}\n                        </React.Fragment>\n                    );\n                }}\n            </Consumer>\n        )\n    }\n}\n\nexport default Contacts;\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport classnames from 'classnames';\n\nconst TextInputGroup = ({\n    label,\n    name,\n    value,\n    placeholder,\n    type,\n    onChange,\n    error\n}) => {\n    return (\n        <div className=\"form-group\">\n            <label htmlFor={name}>{label}</label>\n            <input type={type}\n                className={classnames('form-control form-control-lg', { 'is-invalid': error })}\n                placeholder={placeholder}\n                name={name}\n                value={value}\n                onChange={onChange}\n            />\n            {error && <div className=\"invalid-feedback\">{error}</div>}\n        </div>\n    );\n};\n\nTextInputGroup.prototypes = {\n    label: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired,\n    placeholder: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired,\n    error: PropTypes.string\n}\n\nTextInputGroup.defaultProps = {\n    type: 'text'\n}\n\nexport default TextInputGroup;\n","import React, { Component } from 'react';\nimport { Consumer } from '../../context';\nimport axios from 'axios';\n// import uuid from 'uuid';\nimport TextInputGroup from '../layout/TextInputGroup';\n\nclass AddContact extends Component {\n\n    state = {\n        name: '',\n        email: '',\n        phone: '',\n        errors: {}\n    }\n\n    onChange = (e) => this.setState({ [e.target.name]: e.target.value })\n    onSubmit = async (dispatch, e) => {\n        e.preventDefault();\n\n        const { name, email, phone } = this.state;\n\n        if (name === '') {\n            this.setState({ errors: { name: 'Name is required' } });\n            return;\n        }\n        if (email === '') {\n            this.setState({ errors: { email: 'Email is required' } });\n            return;\n        }\n        if (phone === '') {\n            this.setState({ errors: { phone: 'Phone is required' } });\n            return;\n        }\n        const newContact = {\n            // id: uuid(),\n            name,\n            email,\n            phone,\n            errors: {}\n        }\n\n        const res = await axios.post(`https://jsonplaceholder.typicode.com/users/`, newContact)\n        dispatch({ type: 'ADD_CONTACT', payload: res.data });\n\n        this.setState({\n            name: '',\n            email: '',\n            phone: '',\n            errors: {}\n        });\n        this.props.history.push('/');\n    }\n\n    render() {\n        const { name, email, phone, errors } = this.state;\n\n        return (\n            <Consumer>\n                {value => {\n                    const { dispatch } = value;\n                    return (\n                        <div className=\"card mb-3\">\n                            <div className=\"card-header\">\n                                Add Contact\n                            </div>\n                            <div className=\"card-body\">\n\n                                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n\n                                    <TextInputGroup\n                                        label=\"Name\"\n                                        name=\"name\"\n                                        value={name}\n                                        placeholder=\"Enter Name...\"\n                                        onChange={this.onChange}\n                                        error={errors.name}\n                                    />\n\n                                    <TextInputGroup\n                                        label=\"Email\"\n                                        name=\"email\"\n                                        value={email}\n                                        placeholder=\"Enter Email...\"\n                                        type=\"email\"\n                                        onChange={this.onChange}\n                                        error={errors.email}\n                                    />\n\n                                    <TextInputGroup\n                                        label=\"Phone\"\n                                        name=\"phone\"\n                                        value={phone}\n                                        placeholder=\"Enter Phone...\"\n                                        onChange={this.onChange}\n                                        error={errors.phone}\n                                    />\n\n                                    <input type=\"submit\" value=\"Add Contact\" className=\"btn btn-light btn-block\" />\n                                </form>\n\n                            </div>\n                        </div>\n                    )\n                }}\n            </Consumer>\n        )\n    }\n}\n\nexport default AddContact;","import React, { Component } from 'react';\nimport { Consumer } from '../../context';\nimport axios from 'axios';\nimport TextInputGroup from '../layout/TextInputGroup';\n\nclass EditContact extends Component {\n\n    state = {\n        name: '',\n        email: '',\n        phone: '',\n        errors: {}\n    }\n\n    async componentDidMount() {\n        const { id } = this.props.match.params;\n        const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\n\n        const contact = res.data;\n\n        this.setState({ name: contact.name, email: contact.email, phone: contact.phone });\n    }\n\n    onChange = (e) => this.setState({ [e.target.name]: e.target.value })\n    onSubmit = async (dispatch, e) => {\n        e.preventDefault();\n\n        const { name, email, phone } = this.state;\n\n        if (name === '') {\n            this.setState({ errors: { name: 'Name is required' } });\n            return;\n        }\n        if (email === '') {\n            this.setState({ errors: { email: 'Email is required' } });\n            return;\n        }\n        if (phone === '') {\n            this.setState({ errors: { phone: 'Phone is required' } });\n            return;\n        }\n\n        const updContact = {\n            name, email, phone\n        }\n        const { id } = this.props.match.params;\n        const res = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`, updContact);\n        dispatch({type: 'UPDATE_CONTACT', payload: res.data})\n\n        this.setState({\n            name: '',\n            email: '',\n            phone: '',\n            errors: {}\n        });\n        this.props.history.push('/');\n    }\n\n    render() {\n        const { name, email, phone, errors } = this.state;\n\n        return (\n            <Consumer>\n                {value => {\n                    const { dispatch } = value;\n                    return (\n                        <div className=\"card mb-3\">\n                            <div className=\"card-header\">\n                                Edit Contact\n                            </div>\n                            <div className=\"card-body\">\n\n                                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n\n                                    <TextInputGroup\n                                        label=\"Name\"\n                                        name=\"name\"\n                                        value={name}\n                                        placeholder=\"Enter Name...\"\n                                        onChange={this.onChange}\n                                        error={errors.name}\n                                    />\n\n                                    <TextInputGroup\n                                        label=\"Email\"\n                                        name=\"email\"\n                                        value={email}\n                                        placeholder=\"Enter Email...\"\n                                        type=\"email\"\n                                        onChange={this.onChange}\n                                        error={errors.email}\n                                    />\n\n                                    <TextInputGroup\n                                        label=\"Phone\"\n                                        name=\"phone\"\n                                        value={phone}\n                                        placeholder=\"Enter Phone...\"\n                                        onChange={this.onChange}\n                                        error={errors.phone}\n                                    />\n\n                                    <input type=\"submit\" value=\"Update Contact\" className=\"btn btn-light btn-block\" />\n                                </form>\n\n                            </div>\n                        </div>\n                    )\n                }}\n            </Consumer>\n        )\n    }\n}\n\nexport default EditContact;","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\n// Components\nimport Header from './components/layout/Header';\nimport About from './components/pages/About';\nimport NotFound from './components/pages/NotFound';\nimport Test from './components/test/Test';\nimport Contacts from './components/contacts/Contacts';\nimport AddContact from './components/contacts/AddContact';\nimport EditContact from './components/contacts/EditContact';\n\nimport { Provider } from './context';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\n\nfunction App() {\n  return (\n    <Provider>\n      <Router basename={process.env.PUBLIC_URL}>\n        <div className=\"App\">\n          <Header branding={'Contact Manager'} />\n\n          <div className=\"container\">\n\n            <Switch>\n              <Route exact path=\"/\" component={Contacts} />\n              <Route exact path=\"/contact/add\" component={AddContact} />\n              <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n              <Route exact path=\"/about\" component={About} />\n              <Route exact path=\"/test\" component={Test} />\n              <Route component={NotFound} />\n            </Switch>\n\n          </div>\n\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}